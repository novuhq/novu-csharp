//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Novu.Models.Errors
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using Novu.Models.Errors;
    using Novu.Utils;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class ValidationErrorDtoMessageType
    {
        private ValidationErrorDtoMessageType(string value) { Value = value; }

        public string Value { get; private set; }
        public static ValidationErrorDtoMessageType Str { get { return new ValidationErrorDtoMessageType("str"); } }
        
        public static ValidationErrorDtoMessageType Number { get { return new ValidationErrorDtoMessageType("number"); } }
        
        public static ValidationErrorDtoMessageType Boolean { get { return new ValidationErrorDtoMessageType("boolean"); } }
        
        public static ValidationErrorDtoMessageType Message4 { get { return new ValidationErrorDtoMessageType("message_4"); } }
        
        public static ValidationErrorDtoMessageType ArrayOfMessage5 { get { return new ValidationErrorDtoMessageType("arrayOfMessage5"); } }
        
        public static ValidationErrorDtoMessageType Null { get { return new ValidationErrorDtoMessageType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(ValidationErrorDtoMessageType v) { return v.Value; }
        public static ValidationErrorDtoMessageType FromString(string v) {
            switch(v) {
                case "str": return Str;
                case "number": return Number;
                case "boolean": return Boolean;
                case "message_4": return Message4;
                case "arrayOfMessage5": return ArrayOfMessage5;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for ValidationErrorDtoMessageType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((ValidationErrorDtoMessageType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// Value that failed validation
    /// </summary>
    [JsonConverter(typeof(ValidationErrorDtoMessage.ValidationErrorDtoMessageConverter))]
    public class ValidationErrorDtoMessage {
        public ValidationErrorDtoMessage(ValidationErrorDtoMessageType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public string? Str { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public double? Number { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public bool? Boolean { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public Message4? Message4 { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public List<Message5>? ArrayOfMessage5 { get; set; }

        public ValidationErrorDtoMessageType Type { get; set; }


        public static ValidationErrorDtoMessage CreateStr(string str) {
            ValidationErrorDtoMessageType typ = ValidationErrorDtoMessageType.Str;

            ValidationErrorDtoMessage res = new ValidationErrorDtoMessage(typ);
            res.Str = str;
            return res;
        }

        public static ValidationErrorDtoMessage CreateNumber(double number) {
            ValidationErrorDtoMessageType typ = ValidationErrorDtoMessageType.Number;

            ValidationErrorDtoMessage res = new ValidationErrorDtoMessage(typ);
            res.Number = number;
            return res;
        }

        public static ValidationErrorDtoMessage CreateBoolean(bool boolean) {
            ValidationErrorDtoMessageType typ = ValidationErrorDtoMessageType.Boolean;

            ValidationErrorDtoMessage res = new ValidationErrorDtoMessage(typ);
            res.Boolean = boolean;
            return res;
        }

        public static ValidationErrorDtoMessage CreateMessage4(Message4 message4) {
            ValidationErrorDtoMessageType typ = ValidationErrorDtoMessageType.Message4;

            ValidationErrorDtoMessage res = new ValidationErrorDtoMessage(typ);
            res.Message4 = message4;
            return res;
        }

        public static ValidationErrorDtoMessage CreateArrayOfMessage5(List<Message5> arrayOfMessage5) {
            ValidationErrorDtoMessageType typ = ValidationErrorDtoMessageType.ArrayOfMessage5;

            ValidationErrorDtoMessage res = new ValidationErrorDtoMessage(typ);
            res.ArrayOfMessage5 = arrayOfMessage5;
            return res;
        }

        public static ValidationErrorDtoMessage CreateNull() {
            ValidationErrorDtoMessageType typ = ValidationErrorDtoMessageType.Null;
            return new ValidationErrorDtoMessage(typ);
        }

        public class ValidationErrorDtoMessageConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(ValidationErrorDtoMessage);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new ValidationErrorDtoMessage(ValidationErrorDtoMessageType.Message4)
                    {
                        Message4 = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<Message4>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(Message4), new ValidationErrorDtoMessage(ValidationErrorDtoMessageType.Message4), "Message4"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (json[0] == '"' && json[^1] == '"'){
                    return new ValidationErrorDtoMessage(ValidationErrorDtoMessageType.Str)
                    {
                        Str = json[1..^1]
                    };
                }

                try
                {
                    var converted = Convert.ToDouble(json);
                    return new ValidationErrorDtoMessage(ValidationErrorDtoMessageType.Number)
                    {
                        Number = converted
                    };
                }
                catch (System.FormatException)
                {
                    // try next option
                }

                try
                {
                    var converted = Convert.ToBoolean(json);
                    return new ValidationErrorDtoMessage(ValidationErrorDtoMessageType.Boolean)
                    {
                        Boolean = converted
                    };
                }
                catch (System.FormatException)
                {
                    // try next option
                }

                try
                {
                    return new ValidationErrorDtoMessage(ValidationErrorDtoMessageType.ArrayOfMessage5)
                    {
                        ArrayOfMessage5 = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<List<Message5>>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(List<Message5>), new ValidationErrorDtoMessage(ValidationErrorDtoMessageType.ArrayOfMessage5), "ArrayOfMessage5"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                ValidationErrorDtoMessage res = (ValidationErrorDtoMessage)value;
                if (ValidationErrorDtoMessageType.FromString(res.Type).Equals(ValidationErrorDtoMessageType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.Str != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Str));
                    return;
                }
                if (res.Number != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Number));
                    return;
                }
                if (res.Boolean != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Boolean));
                    return;
                }
                if (res.Message4 != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Message4));
                    return;
                }
                if (res.ArrayOfMessage5 != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ArrayOfMessage5));
                    return;
                }

            }

        }

    }
}