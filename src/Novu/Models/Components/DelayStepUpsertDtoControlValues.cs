//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Novu.Models.Components
{
    using Newtonsoft.Json;
    using Novu.Models.Components;
    using Novu.Utils;
    using System.Collections.Generic;
    
    /// <summary>
    /// Control values for the Delay step
    /// </summary>
    public class DelayStepUpsertDtoControlValues
    {

        /// <summary>
        /// JSONLogic filter conditions for conditionally skipping the step execution. Supports complex logical operations with AND, OR, and comparison operators. See https://jsonlogic.com/ for full typing reference.
        /// </summary>
        [JsonProperty("skip")]
        public Dictionary<string, object>? Skip { get; set; }

        /// <summary>
        /// Type of the delay. Currently only &apos;regular&apos; is supported by the schema.
        /// </summary>
        [JsonProperty("type")]
        public DelayStepUpsertDtoType? Type { get; set; } = Novu.Models.Components.DelayStepUpsertDtoType.Regular;

        /// <summary>
        /// Amount of time to delay.
        /// </summary>
        [JsonProperty("amount")]
        public double Amount { get; set; } = default!;

        /// <summary>
        /// Unit of time for the delay amount.
        /// </summary>
        [JsonProperty("unit")]
        public DelayStepUpsertDtoUnit Unit { get; set; } = default!;
    }
}