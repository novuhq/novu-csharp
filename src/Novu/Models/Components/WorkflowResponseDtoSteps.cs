//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Novu.Models.Components
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using Novu.Models.Components;
    using Novu.Utils;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class WorkflowResponseDtoStepsType
    {
        private WorkflowResponseDtoStepsType(string value) { Value = value; }

        public string Value { get; private set; }
        
        public static WorkflowResponseDtoStepsType InApp { get { return new WorkflowResponseDtoStepsType("in_app"); } }
        public static WorkflowResponseDtoStepsType Email { get { return new WorkflowResponseDtoStepsType("email"); } }
        public static WorkflowResponseDtoStepsType Sms { get { return new WorkflowResponseDtoStepsType("sms"); } }
        public static WorkflowResponseDtoStepsType Push { get { return new WorkflowResponseDtoStepsType("push"); } }
        public static WorkflowResponseDtoStepsType Chat { get { return new WorkflowResponseDtoStepsType("chat"); } }
        public static WorkflowResponseDtoStepsType Delay { get { return new WorkflowResponseDtoStepsType("delay"); } }
        public static WorkflowResponseDtoStepsType Digest { get { return new WorkflowResponseDtoStepsType("digest"); } }
        public static WorkflowResponseDtoStepsType Custom { get { return new WorkflowResponseDtoStepsType("custom"); } }
        public static WorkflowResponseDtoStepsType Null { get { return new WorkflowResponseDtoStepsType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(WorkflowResponseDtoStepsType v) { return v.Value; }
        public static WorkflowResponseDtoStepsType FromString(string v) {
            switch(v) {
                case "in_app": return InApp;
                case "email": return Email;
                case "sms": return Sms;
                case "push": return Push;
                case "chat": return Chat;
                case "delay": return Delay;
                case "digest": return Digest;
                case "custom": return Custom;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for WorkflowResponseDtoStepsType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((WorkflowResponseDtoStepsType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    [JsonConverter(typeof(WorkflowResponseDtoSteps.WorkflowResponseDtoStepsConverter))]
    public class WorkflowResponseDtoSteps {
        public WorkflowResponseDtoSteps(WorkflowResponseDtoStepsType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public InAppStepResponseDto? InAppStepResponseDto { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public EmailStepResponseDto? EmailStepResponseDto { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public SmsStepResponseDto? SmsStepResponseDto { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public PushStepResponseDto? PushStepResponseDto { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public ChatStepResponseDto? ChatStepResponseDto { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public DelayStepResponseDto? DelayStepResponseDto { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public DigestStepResponseDto? DigestStepResponseDto { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public CustomStepResponseDto? CustomStepResponseDto { get; set; }

        public WorkflowResponseDtoStepsType Type { get; set; }


        public static WorkflowResponseDtoSteps CreateInApp(InAppStepResponseDto inApp) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.InApp;
        
            string typStr = WorkflowResponseDtoStepsType.InApp.ToString();
            
            inApp.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.InApp.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.InAppStepResponseDto = inApp;
            return res;
        }
        public static WorkflowResponseDtoSteps CreateEmail(EmailStepResponseDto email) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Email;
        
            string typStr = WorkflowResponseDtoStepsType.Email.ToString();
            
            email.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.Email.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.EmailStepResponseDto = email;
            return res;
        }
        public static WorkflowResponseDtoSteps CreateSms(SmsStepResponseDto sms) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Sms;
        
            string typStr = WorkflowResponseDtoStepsType.Sms.ToString();
            
            sms.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.Sms.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.SmsStepResponseDto = sms;
            return res;
        }
        public static WorkflowResponseDtoSteps CreatePush(PushStepResponseDto push) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Push;
        
            string typStr = WorkflowResponseDtoStepsType.Push.ToString();
            
            push.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.Push.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.PushStepResponseDto = push;
            return res;
        }
        public static WorkflowResponseDtoSteps CreateChat(ChatStepResponseDto chat) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Chat;
        
            string typStr = WorkflowResponseDtoStepsType.Chat.ToString();
            
            chat.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.Chat.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.ChatStepResponseDto = chat;
            return res;
        }
        public static WorkflowResponseDtoSteps CreateDelay(DelayStepResponseDto delay) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Delay;
        
            string typStr = WorkflowResponseDtoStepsType.Delay.ToString();
            
            delay.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.Delay.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.DelayStepResponseDto = delay;
            return res;
        }
        public static WorkflowResponseDtoSteps CreateDigest(DigestStepResponseDto digest) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Digest;
        
            string typStr = WorkflowResponseDtoStepsType.Digest.ToString();
            
            digest.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.Digest.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.DigestStepResponseDto = digest;
            return res;
        }
        public static WorkflowResponseDtoSteps CreateCustom(CustomStepResponseDto custom) {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Custom;
        
            string typStr = WorkflowResponseDtoStepsType.Custom.ToString();
            
            custom.Type = StepTypeEnumExtension.ToEnum(WorkflowResponseDtoStepsType.Custom.ToString());
            WorkflowResponseDtoSteps res = new WorkflowResponseDtoSteps(typ);
            res.CustomStepResponseDto = custom;
            return res;
        }
        public static WorkflowResponseDtoSteps CreateNull() {
            WorkflowResponseDtoStepsType typ = WorkflowResponseDtoStepsType.Null;
            return new WorkflowResponseDtoSteps(typ);
        }

        public class WorkflowResponseDtoStepsConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(WorkflowResponseDtoSteps);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                JObject jo = JObject.Load(reader);
                string discriminator = jo.GetValue("type")?.ToString() ?? throw new ArgumentNullException("Could not find discriminator field.");
                if (discriminator == WorkflowResponseDtoStepsType.InApp.ToString())
                {
                    InAppStepResponseDto? inAppStepResponseDto = ResponseBodyDeserializer.Deserialize<InAppStepResponseDto>(jo.ToString());
                    return CreateInApp(inAppStepResponseDto!);
                }
                if (discriminator == WorkflowResponseDtoStepsType.Email.ToString())
                {
                    EmailStepResponseDto? emailStepResponseDto = ResponseBodyDeserializer.Deserialize<EmailStepResponseDto>(jo.ToString());
                    return CreateEmail(emailStepResponseDto!);
                }
                if (discriminator == WorkflowResponseDtoStepsType.Sms.ToString())
                {
                    SmsStepResponseDto? smsStepResponseDto = ResponseBodyDeserializer.Deserialize<SmsStepResponseDto>(jo.ToString());
                    return CreateSms(smsStepResponseDto!);
                }
                if (discriminator == WorkflowResponseDtoStepsType.Push.ToString())
                {
                    PushStepResponseDto? pushStepResponseDto = ResponseBodyDeserializer.Deserialize<PushStepResponseDto>(jo.ToString());
                    return CreatePush(pushStepResponseDto!);
                }
                if (discriminator == WorkflowResponseDtoStepsType.Chat.ToString())
                {
                    ChatStepResponseDto? chatStepResponseDto = ResponseBodyDeserializer.Deserialize<ChatStepResponseDto>(jo.ToString());
                    return CreateChat(chatStepResponseDto!);
                }
                if (discriminator == WorkflowResponseDtoStepsType.Delay.ToString())
                {
                    DelayStepResponseDto? delayStepResponseDto = ResponseBodyDeserializer.Deserialize<DelayStepResponseDto>(jo.ToString());
                    return CreateDelay(delayStepResponseDto!);
                }
                if (discriminator == WorkflowResponseDtoStepsType.Digest.ToString())
                {
                    DigestStepResponseDto? digestStepResponseDto = ResponseBodyDeserializer.Deserialize<DigestStepResponseDto>(jo.ToString());
                    return CreateDigest(digestStepResponseDto!);
                }
                if (discriminator == WorkflowResponseDtoStepsType.Custom.ToString())
                {
                    CustomStepResponseDto? customStepResponseDto = ResponseBodyDeserializer.Deserialize<CustomStepResponseDto>(jo.ToString());
                    return CreateCustom(customStepResponseDto!);
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                WorkflowResponseDtoSteps res = (WorkflowResponseDtoSteps)value;
                if (WorkflowResponseDtoStepsType.FromString(res.Type).Equals(WorkflowResponseDtoStepsType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.InAppStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.InAppStepResponseDto));
                    return;
                }
                if (res.EmailStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.EmailStepResponseDto));
                    return;
                }
                if (res.SmsStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.SmsStepResponseDto));
                    return;
                }
                if (res.PushStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.PushStepResponseDto));
                    return;
                }
                if (res.ChatStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ChatStepResponseDto));
                    return;
                }
                if (res.DelayStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.DelayStepResponseDto));
                    return;
                }
                if (res.DigestStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.DigestStepResponseDto));
                    return;
                }
                if (res.CustomStepResponseDto != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.CustomStepResponseDto));
                    return;
                }

            }

        }

    }
}