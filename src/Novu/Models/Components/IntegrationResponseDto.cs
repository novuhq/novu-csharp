//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Novu.Models.Components
{
    using Newtonsoft.Json;
    using Novu.Models.Components;
    using Novu.Utils;
    using System.Collections.Generic;
    
    public class IntegrationResponseDto
    {

        /// <summary>
        /// The unique identifier of the integration record in the database. This is automatically generated.
        /// </summary>
        [JsonProperty("_id")]
        public string? Id { get; set; }

        /// <summary>
        /// The unique identifier for the environment associated with this integration. This links to the Environment collection.
        /// </summary>
        [JsonProperty("_environmentId")]
        public string EnvironmentId { get; set; } = default!;

        /// <summary>
        /// The unique identifier for the organization that owns this integration. This links to the Organization collection.
        /// </summary>
        [JsonProperty("_organizationId")]
        public string OrganizationId { get; set; } = default!;

        /// <summary>
        /// The name of the integration, which is used to identify it in the user interface.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; } = default!;

        /// <summary>
        /// A unique string identifier for the integration, often used for API calls or internal references.
        /// </summary>
        [JsonProperty("identifier")]
        public string Identifier { get; set; } = default!;

        /// <summary>
        /// The identifier for the provider of the integration (e.g., &quot;mailgun&quot;, &quot;twilio&quot;).
        /// </summary>
        [JsonProperty("providerId")]
        public string ProviderId { get; set; } = default!;

        /// <summary>
        /// The channel type for the integration, which defines how the integration communicates (e.g., email, SMS).
        /// </summary>
        [JsonProperty("channel")]
        public Models.Components.Channel Channel { get; set; } = default!;

        /// <summary>
        /// The credentials required for the integration to function, including API keys and other sensitive information.
        /// </summary>
        [JsonProperty("credentials")]
        public CredentialsDto Credentials { get; set; } = default!;

        /// <summary>
        /// The configurations required for enabling the additional configurations of the integration.
        /// </summary>
        [JsonProperty("configurations")]
        public ConfigurationsDto? Configurations { get; set; }

        /// <summary>
        /// Indicates whether the integration is currently active. An active integration will process events and messages.
        /// </summary>
        [JsonProperty("active")]
        public bool Active { get; set; } = default!;

        /// <summary>
        /// Indicates whether the integration has been marked as deleted (soft delete).
        /// </summary>
        [JsonProperty("deleted")]
        public bool Deleted { get; set; } = default!;

        /// <summary>
        /// The timestamp indicating when the integration was deleted. This is set when the integration is soft deleted.
        /// </summary>
        [JsonProperty("deletedAt")]
        public string? DeletedAt { get; set; }

        /// <summary>
        /// The identifier of the user who performed the deletion of this integration. Useful for audit trails.
        /// </summary>
        [JsonProperty("deletedBy")]
        public string? DeletedBy { get; set; }

        /// <summary>
        /// Indicates whether this integration is marked as primary. A primary integration is often the default choice for processing.
        /// </summary>
        [JsonProperty("primary")]
        public bool Primary { get; set; } = default!;

        /// <summary>
        /// An array of conditions associated with the integration that may influence its behavior or processing logic.
        /// </summary>
        [JsonProperty("conditions")]
        public List<StepFilterDto>? Conditions { get; set; }
    }
}