//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Novu.Models.Components
{
    using Newtonsoft.Json;
    using Novu.Models.Components;
    using Novu.Utils;
    using System;
    using System.Collections.Generic;
    
    public class NotificationFeedItemDto
    {

        /// <summary>
        /// Unique identifier for the notification.
        /// </summary>
        [JsonProperty("_id")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// Identifier for the template used to generate the notification.
        /// </summary>
        [JsonProperty("_templateId")]
        public string TemplateId { get; set; } = default!;

        /// <summary>
        /// Identifier for the environment where the notification is sent.
        /// </summary>
        [JsonProperty("_environmentId")]
        public string EnvironmentId { get; set; } = default!;

        /// <summary>
        /// Identifier for the message template used.
        /// </summary>
        [JsonProperty("_messageTemplateId")]
        public string MessageTemplateId { get; set; } = default!;

        /// <summary>
        /// Identifier for the organization sending the notification.
        /// </summary>
        [JsonProperty("_organizationId")]
        public string OrganizationId { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the notification instance.
        /// </summary>
        [JsonProperty("_notificationId")]
        public string NotificationId { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the subscriber receiving the notification.
        /// </summary>
        [JsonProperty("_subscriberId")]
        public string SubscriberId { get; set; } = default!;

        /// <summary>
        /// Identifier for the feed associated with the notification.
        /// </summary>
        [JsonProperty("_feedId")]
        public string FeedId { get; set; } = default!;

        /// <summary>
        /// Identifier for the job that triggered the notification.
        /// </summary>
        [JsonProperty("_jobId")]
        public string JobId { get; set; } = default!;

        /// <summary>
        /// Timestamp indicating when the notification was created.
        /// </summary>
        [JsonProperty("createdAt")]
        public DateTime? CreatedAt { get; set; } = null;

        /// <summary>
        /// Timestamp indicating when the notification was last updated.
        /// </summary>
        [JsonProperty("updatedAt")]
        public DateTime? UpdatedAt { get; set; } = null;

        /// <summary>
        /// Actor details related to the notification, if applicable.
        /// </summary>
        [JsonProperty("actor")]
        public ActorFeedItemDto? Actor { get; set; }

        /// <summary>
        /// Subscriber details associated with this notification.
        /// </summary>
        [JsonProperty("subscriber")]
        public SubscriberFeedResponseDto? Subscriber { get; set; }

        /// <summary>
        /// Unique identifier for the transaction associated with the notification.
        /// </summary>
        [JsonProperty("transactionId")]
        public string TransactionId { get; set; } = default!;

        /// <summary>
        /// Identifier for the template used, if applicable.
        /// </summary>
        [JsonProperty("templateIdentifier")]
        public string? TemplateIdentifier { get; set; } = null;

        /// <summary>
        /// Identifier for the provider that sends the notification.
        /// </summary>
        [JsonProperty("providerId")]
        public string? ProviderId { get; set; } = null;

        /// <summary>
        /// The main content of the notification.
        /// </summary>
        [JsonProperty("content")]
        public string Content { get; set; } = default!;

        /// <summary>
        /// The subject line for email notifications, if applicable.
        /// </summary>
        [JsonProperty("subject")]
        public string? Subject { get; set; } = null;

        /// <summary>
        /// Channel type through which the message is sent
        /// </summary>
        [JsonProperty("channel")]
        public ChannelTypeEnum Channel { get; set; } = default!;

        /// <summary>
        /// Indicates whether the notification has been read by the subscriber.
        /// </summary>
        [JsonProperty("read")]
        public bool Read { get; set; } = default!;

        /// <summary>
        /// Indicates whether the notification has been seen by the subscriber.
        /// </summary>
        [JsonProperty("seen")]
        public bool Seen { get; set; } = default!;

        /// <summary>
        /// Device tokens for push notifications, if applicable.
        /// </summary>
        [JsonProperty("deviceTokens")]
        public List<string>? DeviceTokens { get; set; } = null;

        /// <summary>
        /// Call-to-action information associated with the notification.
        /// </summary>
        [JsonProperty("cta")]
        public MessageCTA Cta { get; set; } = default!;

        /// <summary>
        /// Current status of the notification.
        /// </summary>
        [JsonProperty("status")]
        public NotificationFeedItemDtoStatus Status { get; set; } = default!;

        /// <summary>
        /// The payload that was used to send the notification trigger.
        /// </summary>
        [JsonProperty("payload")]
        public Dictionary<string, object>? Payload { get; set; }

        /// <summary>
        /// Provider-specific overrides used when triggering the notification.
        /// </summary>
        [JsonProperty("overrides")]
        public Dictionary<string, object>? Overrides { get; set; }
    }
}